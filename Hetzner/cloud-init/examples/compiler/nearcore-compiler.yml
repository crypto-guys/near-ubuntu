#cloud-config
hostname: compiler-example
package_update: true
package_upgrade: true
packages: [curl, wget, git, htop, iperf, nano, python3, python3-dev, python3-pip, libclang-dev, build-essential, llvm, runc, gcc, gcc-9-locales, g++, g++-multilib, make, clang, pkg-config, libssl-dev, libudev-dev, lib32stdc++6-7-dbg, libx32stdc++6-7-dbg, ninja-build, debian-keyring, autoconf, automake, libtool, flex, ttf-bitstream-vera, autoconf-archive, gnu-standards, zip, unzip, gzip, wget, nano, nmap, mlocate, bison, gdb, bzr, ttf-bitstream-vera, autoconf-archive, gnu-standards, libalgorithm-diff-perl, libfakeroot, libffi-dev, libgpgme11, libncurses-dev, libomp5-10, libtinfo-dev, libz3-4, libz3-dev]
preserve_sources_list: true
disable_suites: [$RELEASE-updates, $RELEASE-backports, $RELEASE]

write_files:
  - encoding: b64
    content: IyEvYmluL2Jhc2gNCiMgU2V0dGluZ3MNCnNldCAtZXUNCmVjaG8gJyoqICBTbGVlcCBmb3IgNyBtaW5zIHdoaWxlIHBhY2thZ2VzIGFyZSBpbnN0YWxsZWQgKionDQpzbGVlcCA0MjANCm1rZGlyIC1wIC9zcmMNCmNob3duIC1SIGNyeXB0by1zb2x1dGlvbnM6Y3J5cHRvLXNvbHV0aW9ucyAvc3JjDQp3Z2V0ICJodHRwczovL3N0YXRpYy5ydXN0LWxhbmcub3JnL3J1c3R1cC9kaXN0L3g4Nl82NC11bmtub3duLWxpbnV4LWdudS9ydXN0dXAtaW5pdCINCndnZXQgImh0dHBzOi8vbmVhci1wcm90b2NvbC1wdWJsaWMuczMuY2EtY2VudHJhbC0xLmFtYXpvbmF3cy5jb20vbmVhcmNvcmUtZ2hzYS05M2dxLTM5Y3EtZjczNS1hZHZpc29yeS1maXgtMS56aXAiDQpjaG1vZCAreCBydXN0dXAtaW5pdA0KLi9ydXN0dXAtaW5pdCAtLXF1aWV0IC15IC0tZGVmYXVsdC10b29sY2hhaW4gbmlnaHRseQ0Kc291cmNlIH4vLnByb2ZpbGUgJiYgc291cmNlIH4vLmJhc2hyYw0KcnVzdHVwIHVwZGF0ZQ0KcnVzdHVwIGNvbXBvbmVudCBhZGQgY2xpcHB5LXByZXZpZXcNCnJ1c3R1cCBkZWZhdWx0IG5pZ2h0bHkNCnVuemlwIG5lYXJjb3JlLWdoc2EtOTNncS0zOWNxLWY3MzUtYWR2aXNvcnktZml4LTEuemlwDQpjZCBuZWFyY29yZS1naHNhLTkzZ3EtMzljcS1mNzM1LWFkdmlzb3J5LWZpeC0xDQptYWtlIHJlbGVhc2UNCg==
    owner: root:root
    path: /usr/local/bin/near-compile.sh
    permissions: '0777'
  - encoding: b64
    content: IyAgICAgICAkT3BlbkJTRDogc3NoZF9jb25maWcsdiAxLjEwMSAyMDE3LzAzLzE0IDA3OjE5OjA3IGRqbSBFeHAgJA0KDQojIFRoaXMgaXMgdGhlIHNzaGQgc2VydmVyIHN5c3RlbS13aWRlIGNvbmZpZ3VyYXRpb24gZmlsZS4gIFNlZQ0KIyBzc2hkX2NvbmZpZyg1KSBmb3IgbW9yZSBpbmZvcm1hdGlvbi4NCg0KIyBUaGlzIHNzaGQgd2FzIGNvbXBpbGVkIHdpdGggUEFUSD0vdXNyL2JpbjovYmluOi91c3Ivc2Jpbjovc2Jpbg0KDQojIFRoZSBzdHJhdGVneSB1c2VkIGZvciBvcHRpb25zIGluIHRoZSBkZWZhdWx0IHNzaGRfY29uZmlnIHNoaXBwZWQgd2l0aA0KIyBPcGVuU1NIIGlzIHRvIHNwZWNpZnkgb3B0aW9ucyB3aXRoIHRoZWlyIGRlZmF1bHQgdmFsdWUgd2hlcmUNCiMgcG9zc2libGUsIGJ1dCBsZWF2ZSB0aGVtIGNvbW1lbnRlZC4gIFVuY29tbWVudGVkIG9wdGlvbnMgb3ZlcnJpZGUgdGhlDQojIGRlZmF1bHQgdmFsdWUuDQojDQojIFdlIGhhdmUgbW9kaWZpZWQgdGhlIGRlZmF1bHQgY29uZmlnIHRvIHByb3ZpZGUgYmV0dGVyIHNlY3J1aXR5IGFuZCB0bw0KIyBiZXR0ZXIgZml0IG91ciB1c2UgY2FzZS4NCiMNCiMgRG9jdW1lbnRhdGlvbiAtLT4gaHR0cHM6Ly93d3cub3BlbnNzaC5jb20vbWFudWFsLmh0bWwgDQojIERvY3VtZW50YXRpb24gLS0+IGh0dHBzOi8vbWFuLm9wZW5ic2Qub3JnL3NzaGRfY29uZmlnDQogDQojIE5FVFdPUktJTkcgU0VDVElPTg0KIw0KIyBIZXJlIHdlIHVwZ3JhZGUgdGhlIHNzaCBwcm90b2NvbCBhbmQgY2FuIGRlZmluZSBwb3J0IGFuZCBpcA0KUHJvdG9jb2wgMg0KUG9ydCAyMg0KI0FkZHJlc3NGYW1pbHkgYW55DQojTGlzdGVuQWRkcmVzcyAwLjAuMC4wDQoNCg0KIyBDUllQVE9HUkFQSFkgU0VDVElPTg0KIyBTSEEtMSB1c2UgaXMgcXVlc3Rpb25hYmxlIGZyb20gYSBzZWN1cml0eSBwZXJzcGVjdGl2ZSAgIA0KIyBGdXJ0aGVyIFJlYWRpbmcgLS0+IGh0dHBzOi8vY3NyYy5uaXN0Lmdvdi9wcm9qZWN0cy9oYXNoLWZ1bmN0aW9ucy9uaXN0LXBvbGljeS1vbi1oYXNoLWZ1bmN0aW9ucyANCiMgRnVydGhlciBSZWFkaW5nIC0tPiBodHRwczovL3d3dy5zc2guY29tL2NyeXB0b2dyYXBoeS8NCiMNCiMgU3VwcG9ydGVkIEhvc3RLZXkgYWxnb3JpdGhtcyBieSBvcmRlciBvZiBwcmVmZXJlbmNlLg0KSG9zdEtleSAvZXRjL3NzaC9zc2hfaG9zdF9lZDI1NTE5X2tleQ0KSG9zdEtleSAvZXRjL3NzaC9zc2hfaG9zdF9yc2Ffa2V5DQpIb3N0S2V5IC9ldGMvc3NoL3NzaF9ob3N0X2VjZHNhX2tleQ0KIyBTcGVjaWZ5IGtleSBleGNoYW5nZSBhbGdvcml0aG1zIA0KS2V4QWxnb3JpdGhtcyBjdXJ2ZTI1NTE5LXNoYTI1NkBsaWJzc2gub3JnLGVjZGgtc2hhMi1uaXN0cDUyMSxlY2RoLXNoYTItbmlzdHAzODQsZWNkaC1zaGEyLW5pc3RwMjU2LGRpZmZpZS1oZWxsbWFuLWdyb3VwLWV4Y2hhbmdlLXNoYTI1Ng0KIyBTcGVjaWZ5IENpcGhlcnMNCkNpcGhlcnMgY2hhY2hhMjAtcG9seTEzMDVAb3BlbnNzaC5jb20sYWVzMjU2LWdjbUBvcGVuc3NoLmNvbSxhZXMxMjgtZ2NtQG9wZW5zc2guY29tLGFlczI1Ni1jdHIsYWVzMTkyLWN0cixhZXMxMjgtY3RyDQojIFNwZWNpZnkgTWVzc2FnZSBhdXRoZW50aWNhdGlvbiBjb2RlIGFsZ29yaXRobXMgDQpNQUNzIGhtYWMtc2hhMi01MTIsaG1hYy1zaGEyLTI1NixobWFjLXNoYTItNTEyLWV0bUBvcGVuc3NoLmNvbSxobWFjLXNoYTItMjU2LWV0bUBvcGVuc3NoLmNvbQ0KDQojIFJla2V5TGltaXQgPSBkZWZhdWx0IG5vbmUsIHdoaWNoIG1lYW5zIHRoYXQgcmVrZXlpbmcgaXMgcGVyZm9ybWVkIGFmdGVyIHRoZSBjaXBoZXIncyBkZWZhdWx0IGFtb3VudCBvZiBkYXRhIGhhcyBiZWVuIHNlbnQgb3IgcmVjZWl2ZWQNCiMgSSd2ZSBzZXQgaXQgdG8gMzAgbWludXRlcw0KIyBodHRwczovL21hbi5vcGVuYnNkLm9yZy9zc2hkX2NvbmZpZyNSZWtleUxpbWl0DQpSZWtleUxpbWl0IGRlZmF1bHQgMzBtDQoNCiMgTG9nZ2luZw0KU3lzbG9nRmFjaWxpdHkgQVVUSA0KTG9nTGV2ZWwgVkVSQk9TRQ0KDQojDQojIExPR0lOIA0KIw0KTG9naW5HcmFjZVRpbWUgM20NClBlcm1pdFJvb3RMb2dpbiBubw0KU3RyaWN0TW9kZXMgeWVzDQpNYXhBdXRoVHJpZXMgNg0KTWF4U2Vzc2lvbnMgMTANCg0KIw0KIyBBVVRIRU5USUNBVElPTg0KIw0KIyBQZXJtaXQgYXV0aGl0aWNhdGlvbiB2aWEgUHVia2V5Pw0KUHVia2V5QXV0aGVudGljYXRpb24geWVzDQojIFRvIGRpc2FibGUgdHVubmVsZWQgY2xlYXIgdGV4dCBwYXNzd29yZHMsIGNoYW5nZSB0byBubyBoZXJlIQ0KUGFzc3dvcmRBdXRoZW50aWNhdGlvbiBubw0KIyBEbyB3ZSByZWFsbHkgd2FudCB0byBhbGxvdyBlbXB0eSBwYXNzd29yZHM/DQpQZXJtaXRFbXB0eVBhc3N3b3JkcyBubw0KIyBDaGFuZ2UgdG8geWVzIHRvIGVuYWJsZSBjaGFsbGVuZ2UtcmVzcG9uc2UgcGFzc3dvcmRzIChiZXdhcmUgaXNzdWVzIHdpdGgNCiMgc29tZSBQQU0gbW9kdWxlcyBhbmQgdGhyZWFkcykNCkNoYWxsZW5nZVJlc3BvbnNlQXV0aGVudGljYXRpb24gbm8NCiMgSWYgeW91IGp1c3Qgd2FudCB0aGUgUEFNIGFjY291bnQgYW5kIHNlc3Npb24gY2hlY2tzIHRvIHJ1biB3aXRob3V0DQojIFBBTSBhdXRoZW50aWNhdGlvbiwgdGhlbiBlbmFibGUgdGhpcyBidXQgc2V0IFBhc3N3b3JkQXV0aGVudGljYXRpb24NCiMgYW5kIENoYWxsZW5nZVJlc3BvbnNlQXV0aGVudGljYXRpb24gdG8gJ25vJy4NClVzZVBBTSB5ZXMNCg0KIyBTU0ggQWdlbnQgRm9yd2FyZGluZw0KIyBUaGlzIGNhbiBiZSB1c2VmdWwgaHR0cHM6Ly93d3cuc3NoLmNvbS9zc2gvYWdlbnQNCkFsbG93QWdlbnRGb3J3YXJkaW5nIHllcw0KDQpBbGxvd1RjcEZvcndhcmRpbmcgeWVzDQpHYXRld2F5UG9ydHMgbm8NClgxMUZvcndhcmRpbmcgbm8NCiNYMTFEaXNwbGF5T2Zmc2V0IDEwDQojWDExVXNlTG9jYWxob3N0IHllcw0KUGVybWl0VFRZIHllcw0KUHJpbnRNb3RkIG5vDQpQcmludExhc3RMb2cgeWVzDQpUQ1BLZWVwQWxpdmUgeWVzDQojVXNlTG9naW4gbm8NCiNQZXJtaXRVc2VyRW52aXJvbm1lbnQgbm8NCiNDb21wcmVzc2lvbiBkZWxheWVkDQpDbGllbnRBbGl2ZUludGVydmFsIDMwDQpDbGllbnRBbGl2ZUNvdW50TWF4IDMNCiNVc2VETlMgbm8NCiNQaWRGaWxlIC92YXIvcnVuL3NzaGQucGlkDQojTWF4U3RhcnR1cHMgMTA6MzA6MTAwDQpQZXJtaXRUdW5uZWwgeWVzDQpDaHJvb3REaXJlY3Rvcnkgbm9uZQ0KI1ZlcnNpb25BZGRlbmR1bSBub25lDQoNCiMgbm8gZGVmYXVsdCBiYW5uZXIgcGF0aA0KI0Jhbm5lciBub25lDQoNCiMgQWxsb3cgY2xpZW50IHRvIHBhc3MgbG9jYWxlIGVudmlyb25tZW50IHZhcmlhYmxlcw0KQWNjZXB0RW52IExBTkcgTENfKg0KDQojIG92ZXJyaWRlIGRlZmF1bHQgb2Ygbm8gc3Vic3lzdGVtcyANClN1YnN5c3RlbSBzZnRwICAvdXNyL2xpYi9vcGVuc3NoL3NmdHAtc2VydmVyDQoNCiMgRXhhbXBsZSBvZiBvdmVycmlkaW5nIHNldHRpbmdzIG9uIGEgcGVyLXVzZXIgYmFzaXMNCiMgTWF0Y2ggVXNlciBhbm9uY3ZzDQojICAgICAgIFgxMUZvcndhcmRpbmcgbm8NCiMgICAgICAgQWxsb3dUY3BGb3J3YXJkaW5nIG5vDQojICAgICAgIFBlcm1pdFRUWSBubw0KIyAgICAgICBGb3JjZUNvbW1hbmQgY3ZzIHNlcnZlcg0KIyAgICAgICBQYXNzd29yZEF1dGhlbnRpY2F0aW9uIHllcw==
    owner: root:root
    path: /etc/ssh/sshd_config
    permissions: '0644' 
groups:
  - cloud-users: []
  - docker: []
  
#   passwd: The hash -- not the password itself -- of the password you want
#           to use for this user. You can generate a safe hash via:
#               mkpasswd --method=SHA-512 --rounds=4096
users:
  - name: crypto-solutions
    gecos: Builder
    Password: "$6$rounds=4096$"
    no_user_group: false
    homedir: /home/crypto-solutions
    primary_group: crypto-solutions
    sudo: ALL=(ALL) NOPASSWD:ALL
    groups: [users, cloud-users, adm, video, plugdev, dip, netdev]
    shell: /bin/bash
    ssh_authorized_keys:
      - ssh-rsa
    inactive: false
    lock_passwd: false 
    uid: 1000 
bootcmd:
  - chown -R crypto-solutions:crypto-solutions /usr/local/share/near-compile.sh
  - su crypto-solutions
  - /usr/local/share/near-compile.sh
